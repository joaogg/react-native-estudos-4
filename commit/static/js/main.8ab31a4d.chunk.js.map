{"version":3,"sources":["components/ContactForm.js","firebase.js","components/Contacts.js","components/Sobre.js","components/Home.js","components/Login.js","components/Contatos.js","components/Perfil.js","components/Lista.js","components/User.js","components/ListaPostagem.js","components/Postagem.js","App.js","serviceWorker.js","index.js"],"names":["ContactForm","props","initialFieldValues","fullName","mobile","email","address","_useState","useState","_useState2","Object","slicedToArray","values","setValues","useEffect","currentId","objectSpread2","contactObjects","handleInputChange","e","_e$target","target","name","value","defineProperty","react_default","a","createElement","autoComplete","onSubmit","preventDefault","addOrEdit","className","placeholder","onChange","type","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Contacts","setCurrentId","_useState3","_useState4","setContactObjects","firebaseDb","database","ref","child","on","snapshot","val","Fragment","components_ContactForm","obj","push","err","console","log","concat","set","keys","map","key","onClick","id","window","confirm","remove","Sobre","Home","Login","_this","classCallCheck","this","_super","call","login","bind","assertThisInitialized","handleChange","signup","state","password","setState","auth","signInWithEmailAndPassword","then","u","location","catch","error","createUserWithEmailAndPassword","for","class","aria-describedby","style","marginLeft","Component","Contatos","onChangeText","event","text","onCreateMessage","date_of_birth","full_name","once","forEach","childSnapshot","loading","messages","testList","_this2","z","Perfil","uid","triste","authListener","signOut","xd","contador","numChildren","toString","kkk","onAuthStateChanged","user","currentUser","displayName","photoURL","emailVerified","localStorage","setItem","removeItem","Lista","react_router_dom","to","User","useParams","fruit","setFruit","errorCode","code","errorMessage","message","ListaPostagem","setContador","_useState5","_useState6","titulo","mensagem","data","Postagem","onChangeTitulo","onChangeData","onChangeMensagem","alert","isAlert","rows","components_ListaPostagem","App","exibeRota","href","data-toggle","data-target","react_router","path","components_Sobre","components_Perfil","components_Login","components_Contacts","components_Contatos","components_Lista","components_Postagem","components_User","Boolean","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ab31a4d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ContactForm = (props) => {\r\n    const initialFieldValues = {\r\n        fullName: '',\r\n        mobile: '',\r\n        email: '',\r\n        address: ''\r\n    }\r\n\r\n    var [values, setValues] = useState(initialFieldValues)\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.currentId == '')\r\n            setValues({ ...initialFieldValues })\r\n        else\r\n            setValues({\r\n                ...props.contactObjects[props.currentId]\r\n            })\r\n    }, [props.currentId, props.contactObjects])\r\n\r\n    const handleInputChange = e => {\r\n        var { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        props.addOrEdit(values);\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                </div>\r\n                <input className=\"form-control\" name=\"fullName\" placeholder=\"Full Name\"\r\n                    value={values.fullName}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input className=\"form-control\" name=\"mobile\" placeholder=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" name=\"email\" placeholder=\"Email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input className=\"form-control\" name=\"address\" placeholder=\"Address\"\r\n                    value={values.address}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" value={props.currentId == \"\" ? \"Save\" : \"Update\"} className=\"btn btn-primary btn-block\" />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAzLJlEdsMjefcneqLdFm_-yWetE_Uvn9A\",\r\n    authDomain: \"crud-fa7ee.firebaseapp.com\",\r\n    databaseURL: \"https://crud-fa7ee.firebaseio.com\",\r\n    projectId: \"crud-fa7ee\",\r\n    storageBucket: \"crud-fa7ee.appspot.com\",\r\n    messagingSenderId: \"954386397450\",\r\n    appId: \"1:954386397450:web:dc0a41fe87353befb862f3\",\r\n    measurementId: \"G-PWJPYJMQE3\"\r\n};\r\n\r\n// Initialize Firebase\r\nvar fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fireDb;","import React, { useState, useEffect } from 'react';\r\nimport ContactForm from \"./ContactForm\";\r\nimport firebaseDb from \"../firebase\";\r\n\r\nconst Contacts = () => {\r\n\r\n    var [currentId, setCurrentId] = useState('');\r\n    var [contactObjects, setContactObjects] = useState({})\r\n\r\n    //Once components load complete\r\n    useEffect(() => {\r\n        firebaseDb.database().ref().child('contacts').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                });\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    const addOrEdit = (obj) => {\r\n        if (currentId == '')\r\n            firebaseDb.database().ref().child('contacts').push(\r\n                obj,\r\n                err => {\r\n                    if (err)\r\n                        console.log(err);\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n        else\r\n            firebaseDb.database().ref().child(`contacts/${currentId}`).set(\r\n                obj,\r\n                err => {\r\n                    if (err)\r\n                        console.log(err);\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n    }\r\n\r\n    const onDelete = id => {\r\n        if (window.confirm('asmdkdsm?')) {\r\n            firebaseDb.database().ref().child(`contacts/${id}`).remove(\r\n                err => {\r\n                    if (err)\r\n                        console.log(err);\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <ContactForm {...({ currentId, contactObjects, addOrEdit })} />\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                    <table className=\"table table-borderless table-stripped\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Mobile</th>\r\n                                <th>Email</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                Object.keys(contactObjects).map((key) => (\r\n                                    <tr key={key}>\r\n                                        <td>{contactObjects[key].fullName}</td>\r\n                                        <td>{contactObjects[key].mobile}</td>\r\n                                        <td>{contactObjects[key].email}</td>\r\n                                        <td className=\"bg-light\">\r\n                                            <a className=\"btn text-primary\" onClick={() => { setCurrentId(key) }}>\r\n                                                <i className=\"fas fa-pencil-alt\"></i>\r\n                                            </a>\r\n                                            <a className=\"btn text-danger\" onClick={() => { onDelete(key) }}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Sobre() {\r\n  return (\r\n      <div className=\"col-md-12\">\r\n        Página \"Sobre\"...\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sobre;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport firebaseDb from \"firebase\";\r\n\r\nfunction Home() {\r\n\r\n\r\n  var ref = \"vai si fude\";\r\n\r\n  return (\r\n\r\n    <>\r\n      <div className=\"col-6\" >\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">tititi</h5>\r\n                            <p className=\"card-text\">msmsmsm</p>\r\n                            <p className=\"card-text\"><small className=\"text-muted\">da</small></p>\r\n                            <a href=\"#\" className=\"btn btn-danger\">Excluir</a>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-6\" >\r\n\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">tititi</h5>\r\n                            <p className=\"card-text\">msmsmsm</p>\r\n                            <p className=\"card-text\"><small className=\"text-muted\">da</small></p>\r\n                            <a href=\"#\" className=\"btn btn-danger\">Excluir</a>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebaseDb from \"../firebase\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        firebaseDb.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => { \r\n            console.log(u);\r\n            window.location='/Perfil'; \r\n\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    signup(e) {\r\n        e.preventDefault();\r\n        firebaseDb.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\r\n        }).then((u) => { console.log(u) })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-4 offset-md-4\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">E-mail:</label>\r\n                        <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Senha:</label>\r\n                        <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                    </div>\r\n                    <button type=\"submit\" onClick={this.login} class=\"btn btn-primary\">Acessar</button>\r\n                    <button onClick={this.signup} style={{ marginLeft: '25px' }} className=\"btn btn-success\">Cadastrar-se</button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport firebaseDb from \"firebase\";\r\n\r\nclass Contatos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: '',\r\n            loading: false,\r\n            messages: [],\r\n            testList: [],\r\n        };\r\n    }\r\n\r\n    onChangeText = event => {\r\n        this.setState({ text: event.target.value });\r\n    }\r\n\r\n    onCreateMessage = event => {\r\n        console.log(\"???\");\r\n        var usersRef = firebaseDb.database().ref().child(\"users\");\r\n        usersRef.push({\r\n            date_of_birth: this.state.text,\r\n            full_name: \"Alan Turing\"\r\n        });\r\n\r\n        this.setState({ text: '' });\r\n\r\n        firebaseDb.database().ref().child(\"users\").once('value', function (snapshot) {\r\n            snapshot.forEach(function (childSnapshot) {\r\n                var childKey = childSnapshot.key;\r\n                var childData = childSnapshot.val();\r\n                console.log(childSnapshot.val().full_name);\r\n                // ...\r\n            });\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        firebaseDb.database().ref().child(\"users\").on('value', snapshot => {\r\n            console.log(\"putamadre\" + snapshot);\r\n\r\n\r\n\r\n            snapshot.forEach(childSnapshot => {\r\n                const result = Object.values(childSnapshot);\r\n                console.log(\"kkk \" + childSnapshot.val());\r\n                this.setState({\r\n                    testList: childSnapshot\r\n                });\r\n                var childKey = childSnapshot.key;\r\n                var childData = childSnapshot.val();\r\n                //console.log(childSnapshot.val().full_name);\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        console.log(\"q poha \" + this.state.testList);\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onCreateMessage}>\r\n                    <input type=\"text\" value={this.text} onChange={this.onChangeText} />\r\n                    <button className=\"btn btn-primary\" type=\"submit\">Send</button>\r\n                </form>\r\n                {this.state.testList.forEach(z =>\r\n                    <p>{z}asmdk</p>)}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contatos;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport firebaseDb from \"firebase\";\r\n\r\nclass Perfil extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            uid: '',\r\n            password: '',\r\n            triste: ''\r\n        };\r\n\r\n        this.authListener = this.authListener.bind(this);\r\n        this.signOut = this.signOut.bind(this);\r\n        this.xd = this.xd.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.authListener();\r\n\r\n        var contador;\r\n        firebaseDb.database().ref(\"contacts\").on(\"child_added\", function (snapshot) {\r\n            //console.log(snapshot.numChildren());\r\n            contador = snapshot.numChildren().toString();\r\n            console.log(snapshot.numChildren());\r\n            console.log(\"asdm \" + contador);\r\n\r\n        });\r\n\r\n        var kkk = firebaseDb.database().ref(\"contacts\").once(\"value\").then(function (snapshot) {\r\n            return snapshot;\r\n        });\r\n\r\n        //this.state.triste = kkk.numChildren();\r\n\r\n        //firebaseDb.database().ref(\"contacts\").once(\"value\").then().numChildren();\r\n\r\n        console.log(\"tnc = \" + kkk);\r\n\r\n    }\r\n\r\n    xd() {\r\n        firebaseDb.database().ref(\"contacts\").once(\"value\").then(function (snapshot) {\r\n            return snapshot.numChildren();\r\n        });\r\n    }\r\n\r\n    authListener() {\r\n        firebaseDb.auth().onAuthStateChanged((user) => {\r\n\r\n            var user = firebaseDb.auth().currentUser;\r\n            var name, email, photoUrl, uid, emailVerified;\r\n\r\n\r\n            if (user != null) {\r\n                name = user.displayName;\r\n                email = user.email;\r\n                photoUrl = user.photoURL;\r\n                emailVerified = user.emailVerified;\r\n                uid = user.uid;\r\n                console.log(user.email);\r\n                this.state.email = user.email;\r\n                this.state.uid = user.uid;\r\n\r\n            }\r\n\r\n            if (user) {\r\n                this.setState({ user });\r\n                localStorage.setItem('user', user.uid);\r\n            } else {\r\n                this.setState({ user: null });\r\n                localStorage.removeItem('user');\r\n            }\r\n        });\r\n    }\r\n\r\n    signOut() {\r\n        firebaseDb.auth().signOut().then(function () {\r\n            window.location = '/Login';\r\n        }).catch(function (error) {\r\n            // An error happened.\r\n        });\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <h2>Nome: {this.state.email}.</h2>\r\n                <h2>ID: {this.state.uid}.</h2>\r\n                <h2>COUNT: {this.state.triste}.</h2>\r\n                <button onClick={this.signOut} style={{ marginLeft: '25px' }} className=\"btn btn-success\">SignOut</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Perfil;\r\n","import React, { useState, useEffect} from 'react';\r\nimport firebaseDb from \"firebase\";\r\nimport {Link} from \"react-router-dom\";\r\nconst Lista = () => {\r\n\r\n\r\n    const list = [\r\n        {\r\n            id: 'a',\r\n            firstname: 'Robin',\r\n            lastname: 'Wieruch',\r\n            year: 1988,\r\n        },\r\n        {\r\n            id: 'b',\r\n            firstname: 'Dave',\r\n            lastname: 'Davidds',\r\n            year: 1990,\r\n        },\r\n    ];\r\n\r\n    const lista = [];\r\n    var [currentId, setCurrentId] = useState('');\r\n    var [contactObjects, setContactObjects] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        firebaseDb.database().ref().child('users').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                });\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onDelete = id => {\r\n        if (window.confirm('asmdkdsm?')) {\r\n            firebaseDb.database().ref().child(`users/${id}`).remove(\r\n                err => {\r\n                    if (err)\r\n                        console.log(err);\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            {Object.keys(contactObjects).map((key) => (\r\n                <ul key={key}>\r\n                    <li key={key}>\r\n                        <div>\r\n                            {contactObjects[key].full_name} -\r\n                            <Link to={`/user/${key}`}>ver</Link>\r\n\r\n                                            <a className=\"btn text-danger\" onClick={() => { onDelete(key) }}>\r\n                                deletar\r\n                                            </a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lista;","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport firebaseDb from \"firebase\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nconst User = () => {\r\n    \r\n    const { id } = useParams();\r\n\r\nconst [fruit, setFruit] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        firebaseDb.database().ref(\"users\").child(id).once(\"value\").then(snapshot =>\r\n\r\n            console.log(snapshot.value())\r\n        ).catch(error => ({\r\n            errorCode: error.code,\r\n            errorMessage: error.message\r\n        }));\r\n\r\n\r\n\r\n        firebaseDb.database().ref('/users/' + id).once('value').then(function (snapshot) {\r\n    console.log(\"objeto??? = > \" + snapshot.values);\r\n    //var arr3 = Object.values(snapshot);\r\n    //console.log(\"objeto??? = > \" + arr3);\r\n\r\n    //setFruit({...Object.values(snapshot.val())});\r\n    setFruit(snapshot.val().full_name); \r\n    console.log(\"name?? \" );\r\n        });\r\n\r\n    }, [])\r\n\r\n    // mds q cara bom\r\n    // https://stackoverflow.com/questions/52435658/getting-a-specific-object-item-by-id-in-firebase\r\n\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            User ID {id}  {fruit}\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default User;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebaseDb from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ListaPostagem = () => {\r\n\r\n    var [currentId, setCurrentId] = useState('');\r\n    var [contador, setContador] = useState('');\r\n    var [contactObjects, setContactObjects] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        firebaseDb.database().ref().child('postagem').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                });\r\n            }\r\n            setContador(snapshot.numChildren());\r\n            //console.log(snapshot.numChildren());\r\n\r\n        })\r\n    }, [])\r\n\r\n    const onDelete = id => {\r\n        if (window.confirm('Tem certeza que deseja excluir essa postagem?')) {\r\n            firebaseDb.database().ref().child(`postagem/${id}`).remove(\r\n                err => {\r\n                    if (err)\r\n                        console.log(err);\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"col-sm-12 text-right\">\r\n                <h2>Nº Postagens: <span class=\"badge badge-secondary\">{contador}</span></h2>\r\n            </div>\r\n            {Object.keys(contactObjects).map((key) => (\r\n                <div class=\"col-sm-6\" key={key}>\r\n                    <div className=\"card mb-3\" key={key}>\r\n                        <div className=\"card-body\" key={key}>\r\n                            <h5 className=\"card-title\">{contactObjects[key].titulo}</h5>\r\n                            <p className=\"card-text\">{contactObjects[key].mensagem}</p>\r\n                            <p className=\"card-text\"><small className=\"text-muted\">{contactObjects[key].data}</small></p>\r\n                            <a className=\"btn btn-danger\" onClick={() => { onDelete(key) }}>Excluir</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListaPostagem;","import React, { Component } from 'react';\r\nimport firebaseDb from \"firebase\";\r\nimport ListaPostagem from \"./ListaPostagem\";\r\n\r\nclass Postagem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            titulo: '',\r\n            data: '',\r\n            mensagem: '',\r\n            alert: false,\r\n            loading: false,\r\n            messages: [],\r\n            testList: [],\r\n        };\r\n    }\r\n\r\n    onChangeTitulo = event => {\r\n        this.setState({ titulo: event.target.value });\r\n    }\r\n\r\n    onChangeData = event => {\r\n        this.setState({ data: event.target.value });\r\n    }\r\n\r\n    onChangeMensagem = event => {\r\n        this.setState({ mensagem: event.target.value });\r\n    }\r\n\r\n    onCreateMessage = event => {\r\n        firebaseDb.database().ref().child(\"postagem\").push({\r\n            titulo: this.state.titulo,\r\n            data: this.state.data,\r\n            mensagem: this.state.mensagem\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n        this.setState({\r\n            titulo: '',\r\n            data: '',\r\n            mensagem: '',\r\n            alert: true\r\n        });\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const isAlert = this.state.alert;\r\n        return (\r\n            <>\r\n                <div class=\"col-lg-12\">\r\n                    {isAlert ? <>\r\n                        <div className=\"alert alert-info\">\r\n                            <strong>Info!</strong> This alert box could indicate a neutral informative change or action.\r\n                    </div>\r\n                    </> : ''}\r\n\r\n                    <form className=\"form-row\" onSubmit={this.onCreateMessage}>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Título:</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Título\" id=\"titulo\" value={this.titulo} onChange={this.onChangeTitulo} />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Data:</label>\r\n                            <input type=\"datetime-local\" class=\"form-control\" id=\"data\" value={this.data} onChange={this.onChangeData} />\r\n                        </div>\r\n                        <div class=\"form-group col-md-12\">\r\n                            <label>Mensagem:</label>\r\n                            <textarea class=\"form-control\" rows=\"5\" id=\"mensagem\" value={this.mensagem} onChange={this.onChangeMensagem} ></textarea>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-12\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Cadastrar</button>\r\n                        </div>\r\n                    </form>\r\n                    <br />\r\n                </div>\r\n\r\n                <ListaPostagem />\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Postagem;","import React, { Component } from 'react';\nimport './App.css';\nimport Contacts from './components/Contacts';\nimport Sobre from './components/Sobre';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Contatos1 from './components/Contatos';\nimport Perfil from './components/Perfil';\nimport Lista from './components/Lista';\nimport User from './components/User';\nimport Postagem from './components/Postagem';\nimport firebase from \"firebase\";\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n\n  constructor() {\n\n    var user = firebase.auth().currentUser;\n    var name, email, photoUrl, uid, emailVerified;\n\n    if (user != null) {\n      name = user.displayName;\n      email = user.email;\n      photoUrl = user.photoURL;\n      emailVerified = user.emailVerified;\n      uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\n      // this value to authenticate with your backend server, if\n      // you have one. Use User.getToken() instead.\n    }\n\n    super();\n    this.state = ({\n      user: null,\n    });\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    firebase.auth().onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        this.setState({ user });\n        localStorage.setItem('user', user.uid);\n      } else {\n        this.setState({ user: null });\n        localStorage.removeItem('user');\n      }\n    });\n  }\n\n  render() {\n\n    let exibeRota;\n    var user = firebase.auth().currentUser;\n\n    if (user) {\n      exibeRota = <nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n      <a class=\"navbar-brand\" href=\"#\">React + Firebase JoaoG</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/Perfil\">Perfil</a>\n          </li>          \n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/Postagem\">Criar Postagem</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/Contatos1\">Contatos Tutorial 1.0</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/Lista\">Contatos Tutorial Lista 1.0</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/Contatos\">Contatos Tutorial</a>\n          </li>                    \n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/Sobre\">Sobre</a>\n          </li>\n        </ul>\n      </div>\n    </nav>;\n    } else {\n      exibeRota = <nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n        <a class=\"navbar-brand\" href=\"#\">React + Firebase JoaoG</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/\">Home</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/Contatos\">Contatos Tutorial</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/Sobre\">Sobre</a>\n            </li>\n          </ul>\n        </div>\n      </nav>;\n    }\n\n    return (\n      <body>\n        {exibeRota}\n\n        <div className=\"jumbotron text-center\">\n          <h1>React + Firebase JoaoG</h1>\n          <p>Site para testes e apredizado!</p>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <Router>\n              {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n              <Switch>\n                <Route path=\"/Sobre\">\n                  <Sobre />\n                </Route>\n                <Route path=\"/Perfil\">\n                  <Perfil />\n                </Route>\n                <Route path=\"/Login\">\n                  <Login />\n                </Route>\n                <Route path=\"/Contatos\">\n                  <Contacts />\n                </Route>\n                <Route path=\"/Contatos1\">\n                  <Contatos1 />\n                </Route>\n                <Route path=\"/Lista\">\n                  <Lista />\n                </Route>\n                <Route path=\"/Postagem\">\n                  <Postagem />\n                </Route>\n                <Route path=\"/User/:id\">\n                  <User />\n                </Route>\n                <Route path=\"/\">\n                  <Login />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        </div>\n      </body >\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}